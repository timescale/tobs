---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "tobs.fullname" . }}-test-datasource"
  namespace: "{{ template "tobs.namespace" . }}"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
data:
  datasources.sh: |-
    #!/bin/bash

    set -euo pipefail

    function query() {
        local uid="$1"
        local query="$2"
        local format="$3"

        local body=$(cat <<-EOM
    {
        "queries":[
            {
                "datasource":{
                    "uid":"$uid"
                },
                "refId":"A",
                "format":"$format",
                "expr":"$query"
            }
        ],
        "from":"now-5m",
        "to":"now"
    }
    EOM
    )
        curl -H "Content-Type: application/json" -X POST -d "$body" "http://${GRAFANA_USER}:${GRAFANA_PASS}@${RELEASE}-grafana.${NAMESPACE}.svc:80/api/ds/query" 2>/dev/null | jq '.results.A'
    }

    # Get helm release name
    RELEASE="{{ include "tobs.fullname" . }}"
    NAMESPACE="{{ template "tobs.namespace" . }}"

    # Get grafana credentials
    GRAFANA_USER="{{ index .Values "kube-prometheus-stack" "grafana" "adminUser" }}"
    GRAFANA_PASS="$(kubectl get secret -n "${NAMESPACE}" "${RELEASE}-grafana" -o json | jq -r '.data["admin-password"]' | base64 -d)"

    SQL_QUERY="SELECT * FROM pg_extension WHERE extname = 'timescaledb_toolkit';"
    RESULT_SQL=$(query "c4729dfb8ceeaa0372ef27403a3932695eee995d" "$SQL_QUERY" "table")
    if [ "$(jq 'has("error")' <<< ${RESULT_SQL})" == "true" ]; then
        echo "GRAFANA SQL DATASOURCE CANNOT QUERY DATA DUE TO:"
        jq '.error' <<< ${RESULT_SQL}
        exit 1
    fi

    RESULT_PRM=$(query "dc08d25c8f267b054f12002f334e6d3d32a853e4" "ALERTS" "time_series")
    if [ "$(jq 'has("error")' <<< ${RESULT_PRM})" == "true" ]; then
        echo "GRAFANA PROMQL DATASOURCE CANNOT QUERY DATA DUE TO:"
        jq '.error' <<< ${RESULT_PRM}
        exit 1
    fi

    echo "All queries passed"
---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "tobs.fullname" . }}-test-datasource"
  labels:
    {{- include "tobs.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: checker
      image: busybox ???
      command:
        - /bin/bash
        - -c
        - /usr/local/bin/datasources.sh
      volumeMounts:
      - mountPath: /usr/local/bin/datasources.sh
        name: datasources-bin
        readOnly: true
        subPath: datasources.sh
  restartPolicy: Never
  volumes:
  - name: datasources-bin
    configMap:
      name: "{{ include "tobs.fullname" . }}-test-datasource"
      defaultMode: 0755
